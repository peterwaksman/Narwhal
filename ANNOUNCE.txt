Sept 4 2018
Conversational Context and Context Ledger now supported, including use of polarity. See nwcontext, nwcontextrecord, and *Context modules.




June 28
First checkin for ContextFrame



Dec 13
Did a checkin "synch to home" that did several things:
 - added a new kind of NAR - the four part relation()
 - wrote long comment in quantities.py about how to support __regex__ matching
 - TChat's are refactored (NWChat deprecated)
 - The chatbot architecture plan is moving towards modularity. The TChat now suppots composition with a '+' operator
 - Began work on a dental dictionary. I do not think it damages my company to use words I learned there.


Nov 23 (Thanksgiving).
Am implementing example "mini" chatbots: the tchats.py and the bouncy application. 


Nov 5
Have implemented a simple and elegant context retrieval, triggered by missing parts of a narrative, in the presence of an indeterminate word like "it" or "both". I only implemented a couple indeterminates: both, and difference.

July 3:
Building out the chatbot platform, with NWDataNode, TopicTree,
and NWChat.

June 6
Major additions: 
 - New form of vaulting called recordSlotEvents()
 - Added unknown ints in INTx VAR using " __d__ "
   and all kinds of special handling of var.knames[0] as lastConst
or replaced by var.lastConst use when it is an "unknown" type of VAR. 
HAd introduced "QUANTITY" but am backing off and using INTx instead for tooth numbers and case numbers. Still have to get signs working and floating point. 




May 30
Introduced stdtrees subdirectory, containing two files for now.
"ask'py" is a keyword tree for questions and "quantities.py" is
a keyword tree for integers 0<=i<=32. These can be added to and other "standard tree" files can be placed here to help app development.


May 25 Now supports querying a narrative. At least for
lower order NARs you can ask for Thing(),Action(),Relation()
or Value() and it will tell you a ':' separated string of VAR names. It has a ways to go but it implements context for what
has been read, that is stored in the NAR.lastConst value.


April 23: Modified basic.py and created basic2.py. Both are heavily documented
examples of simple Narwhal apps.

April 5 Switched over to gwax's more professional style (somewhat) and looking 
forward to extending "basic.py" example and providing some documentation. While
gwax is concerned with re-factory and code clarity, pwax (me) is concerned with
developing automated keyword/keynarrative discovery tools. 


Feb25
V2.0 release created. I now have enough confidence to delete v1.


Feb 12
Version 2 now working pretty much as desired. Questions with AD HOC solutions
are creeping in in several places: the gof() depends a bit on segment structure
the vault thresholds on vaulting rather than on setting the pre. Both V1 and V2
will continue in parallel for a bit longer. Speedup is phenomenal.

April 5 - Narwhal now incoporates some professional python style. gwax has been 
correcting things, and developing testing methods. The new 
"\examples\basic.py" is getting worked on. Plans are
(1) further 'pythonization' of the code and potential for re-factoring
(2) the urge to create keyword/keynarrative discovery tools. 
(3) btest.py now supports an array of sentences and is better positioned
for regresson testing.
(4) docs




Feb 1
Narwhal version 2 is running - may need further debugging and
definately still needs wrapping  with "App" totality. But there
is now, at least, a new stake in the ground. The concept of
segmented text, replacing tokenized text, is going well.

-------------------------------------------------------------
Jan 20: Version 1 uses direct text processing, which leads to the same
KList lookups occurring over and over - completely inefficiently.
It was my goal for the code to be true to an intuition about the
"moving topic", so pre-processing the text wasn't allowed. Now for
performance, I must revisit the decision. As we move beyond Version 1,
I am afraid I am moving past intuition and needing to conceptualize
entities that are not directly intuitive. In particular concepts of
'token' need to be replaced with concepts of filled VAR. A sequence of
tokens is replaced by a sequence of filled VARs called a "segment".
All other operations, up to the NWReader, need to be re-written using
segmented text.

But I have to develop new intuitions for segments. They will be the
"spatial curves" to which we fit the moving frames of narrative.

-----------------------------------------------------------
Jan 15 2017
Version 1 of Narwhal is Complete

IT HAS SEVERE PERFORMANCE PROBLEMS. I am redesigning it to replace reading
of text with conversion of text to "segmented indexing" and reading of the
segmented data. That way only one time through the dictionaries will be
needed.

Stay tuned as we try to see what kind of "release label" I can apply here
on GitHub.
UPDATE: done, now there is a "release" folder on the main page.